version: '3.8'

services:
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - mynetwork

  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    ports:
      - "3001:3000"
    depends_on:
      - redis
      - mysql
      - rabbitmq
    networks:
      - mynetwork
    command: npm run start

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
    networks:
      - mynetwork

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINUSERPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    depends_on:
      - mongodb
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:latest
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - mynetwork

  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: finalproject_db
    ports:
      - "3307:3306"
    networks:
      - mynetwork

volumes:
  mongo-data:
    driver: local

networks:
  mynetwork:
    driver: bridge
